name: Creating plugin package in the PR

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - main

jobs:
  create-package:
    runs-on: ubuntu-22.04
    container:
      image: qgis/qgis:release-3_30
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fix Python command
        run: apt-get install python-is-python3

      - name: Install python
        uses: actions/setup-python@v4

      - name: Install plugin dependencies
        run: pip install -r requirements-dev.txt

      - name: Get unique identifier
        id: get-identifier
        run: |
          echo "::set-output name=PACKAGE_ID::$(python -c "import uuid; print(str(uuid.uuid4())[:5])")"

      - name: Generate zip file
        run: |
          python admin.py generate-zip --version ${{ format('{0}_{1}', 
          github.event.pull_request.head.ref,
          steps.get-identifier.outputs.PACKAGE_ID) }} --output-directory docs/plugin/package

      - name: Zip file path details
        id: get-zip-details
        run: |
          echo "::set-output name=ZIP_PATH::docs/plugin/package/$(ls docs/plugin/package)\n"
          echo "::set-output name=ZIP_NAME::$(ls docs/plugin/package)"

      - name: Uploading plugin zip
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.get-zip-details.outputs.ZIP_NAME }}
          path: ${{ steps.get-zip-details.outputs.ZIP_PATH }}
          env-url: ARTIFACT_URL

      - name: Get artifact url
        id: get-artifact_url
        run: |
          echo "${{ env.ARTIFACT_URL }}"
          echo "::set-output name=ARTIFACT_URL::${{ env.ARTIFACT_URL }}"

  comment:
    needs: create-package
    runs-on: ubuntu-latest
    steps:
      - name: Get Artifact and Pull request info
        env:
          GITHUB_TOKEN: ${{ github.token }}
          WORKFLOW_RUN_EVENT_OBJ: ${{ toJSON(github.event.pull_request) }}
          WORKFLOW_RUN_EVENT_OBJ_2: ${{ toJSON(github.event.workflow_run) }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          HEAD_SHA: ${{ github.event.pull_request.base.sha }}
          PULL_REQUEST_EVENT_NUMBER: ${{ github.event.pull_request.number }}
          PULL_REQUEST_EVENT_NUMBER_2: ${{ github.event.number }}
          EVENT_ID: ${{ github.run_id }}
          ARTIFACT_URL: ${{ steps.get_artifact_url.outputs.ARTIFACT_URL }}
        run: |
          
          PREVIOUS_JOB_ID=$(jq -r '.id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
          PREVIOUS_JOB_ID_2=$(jq -r '.id' <<< "$WORKFLOW_RUN_EVENT_OBJ_2")
          
          SUITE_ID_2=$(jq -r '.check_suite_id' <<< "$WORKFLOW_RUN_EVENT_OBJ_2")
          echo "Previous Suite ID 2: $SUITE_ID_2"
          echo "SUITE_ID_2=$SUITE_ID_2" >> "$GITHUB_ENV"

          SUITE_ID=$(jq -r '.check_suite_id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
          echo "Previous Suite ID: $SUITE_ID"
          echo "SUITE_ID=$SUITE_ID" >> "$GITHUB_ENV"

          ARTIFACT_ID=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select(.pull_request.id==${PREVIOUS_JOB_ID_2})  |
            select(.expired==false) |
            .id")

          echo "Artifact ID: $ARTIFACT_ID"
          echo "ARTIFACT_ID=$ARTIFACT_ID" >> "$GITHUB_ENV"
        
          ARTIFACT_URL_6=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select(.pull_request.id==${PREVIOUS_JOB_ID_2}) |
            select(.expired==false) |
            .archive_download_url")

          echo "ARTIFACT URL 6: $ARTIFACT_URL_6"
          echo "ARTIFACT_URL_6=$ARTIFACT_URL_6" >> "$GITHUB_ENV"
          
          ARTIFACT_URL_8=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select(.github.run_id=${EVENT_ID}) |
            select(.expired==false) |
            .archive_download_url")

          echo "ARTIFACT URL 8: $ARTIFACT_URL_8"
          echo "ARTIFACT_URL_8=$ARTIFACT_URL_8" >> "$GITHUB_ENV"

          PR_NUMBER=$(jq -r '.pull_requests[0].number' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ_2")

          echo "Pull request Number: $PR_NUMBER"
          echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_ENV"

          echo "Pull request event number :$PULL_REQUEST_EVENT_NUMBER"
          echo "Pull request event number 2 :$PULL_REQUEST_EVENT_NUMBER_2"

          echo "Head SHA: $HEAD_SHA"
          echo "HEAD_SHA=$HEAD_SHA" >> "$GITHUB_ENV"
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number:  ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
      - name: Update Comment
        env:
          JOB_PATH: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ env.EVENT_ID }}"
          ARTIFACT_URL: "${{ github.server_url }}/${{ github.repository }}/suites/${{ env.SUITE_ID_2 }}/artifacts/${{ env.ARTIFACT_ID }}"
          HEAD_SHA: "${{ env.HEAD_SHA }}"
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ github.token }}
          issue-number:  ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body: |-
            ![badge]

            Plugin zip package for the changes in this PR has been successfully built!.

            Download the plugin zip file here ${{ env.ARTIFACT_URL }}

            [badge]: https://img.shields.io/badge/package_build-success-green
